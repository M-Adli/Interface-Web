>>>>>>>>>> REGLE: init
>>>>>>>>>> BUT:infe(X,Y)=>add(X,?(Z),Y)
 but initial:
(F)infe(X,Y)=>add(X,?(Z),Y)
>>>>>>>>>> REGLE: comput
 nouveaux buts:
(G1)add(X,T,Y)=>add(s(X),?(Z),s(Y))
(G2)add(0,?(Z),Y)
 clauses associees:
(es_F(s(X),s(Y),Z):-es_F(X,Y,T),es_G1(X,T,Y,Z))
(es_F(0,Y,Z):-es_G2(Z,Y))
>>quel but ?
G1: add(X,T,Y)=>add(s(X),?(Z),s(Y))
G2: add(0,?(Z),Y)
G2
>>>>>>>>>> REGLE: dci
 
atome positif choisi : 
add(0,?(Z),Y)
 nouveaux buts:
 vrai
 clause associee:
es_G2(Y,Y)
>>>>1 succes partiels   
nouveau but courant: 
(G1)add(X,T,Y)=>add(s(X),?(Z),s(Y))
>>>>>>>>>> REGLE: dci
 
atome positif choisi : 
add(s(X),?(Z),s(Y))
 nouveaux buts:
(H)add(X,T,Y)=>add(X,?(Z),Y)
 clause associee:
(es_G1(X,T,Y,Z):-es_H(X,T,Y,Z))
  
nouveau but courant: 
(H)add(X,T,Y)=>add(X,?(Z),Y)
>>>>>>>>>> REGLE: simpl
   
paire d atomes choisie : 
add(X,T,Y),add(X,?(Z),Y)
>> confirmation (o/n):o
 nouveaux buts:
 vrai
 clause associee:
es_H(X,Z,Y,Z)
>>>>>>>>>> succes total!
>>>> Voulez-vous voir toutes les clauses d'entree-sortie (tout_es)
>>>> ou seulement leur simplification par depliages (depl_es) ? 
>>>>>>>>>> REGLE: tout_es
 but prouve:
(F)infe(X,Y)=>add(X,?(Z),Y)
   
 predicat associe: 
es_F(X,Y,Z)
   
clauses collectees: 
(es_F(s(X),s(Y),Z):-es_F(X,Y,T),es_G1(X,T,Y,Z))
(es_F(0,Y,Z):-es_G2(Z,Y))
es_G2(Y,Y)
(es_G1(X,T,Y,Z):-es_H(X,T,Y,Z))
es_H(X,Z,Y,Z)
>>>>>>>>>> REGLE: depl_es
but prouve:
(F)infe(X,Y)=>add(X,?(Z),Y)
     
predicat associe: 
es_F(X,Y,Z)
     
 clauses d'entree-sortie apres depliages: 
(es_F(s(X),s(Y),Z):-es_F(X,Y,Z))
es_F(0,Y,Y)
>>>> Voulez-vous tronquer es_F (o/n) ? 
>>>> Fin de la synthese.
>>>> Vous pouvez commencer une autre preuve (g. pour etre aide).
>>>>>>>>>> REGLE: f
ciao.
>>>> Utiliser: tout_es, depl_es, f/fin.
>>>>>>>>>> REGLE: 